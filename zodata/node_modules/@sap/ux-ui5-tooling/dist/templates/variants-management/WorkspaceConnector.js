sap.ui.define(
    [
        'sap/base/util/merge',
        'sap/ui/fl/write/api/connectors/ObjectStorageConnector',
        'sap/ui/fl/Layer',
        'sap/base/util/UriParameters'
    ],
    function (merge, ObjectStorageConnector, Layer, UriParameters) {
        'use strict';
        var url = new URL(window.location.toString());
        var uriParameters = UriParameters.fromURL(url.href);
        var rtaMode = uriParameters.get('fiori-tools-rta-mode');
        var generator =
            rtaMode === 'forAdaptation'
                ? 'changeUtils: SAPFioriTools-propertyEditor'
                : 'changeUtils: SAPFioriTools-variants';

        var trustedHosts = [/^localhost$/, /^.*.applicationstudio.cloud.sap$/];
        var isValidHost = trustedHosts.some((host) => {
            return host.test(url.hostname);
        });

        var WorkspaceConnector = merge({}, ObjectStorageConnector, {
            layers: [Layer.VENDOR, Layer.CUSTOMER_BASE],
            storage: {
                _itemsStoredAsObjects: true,
                setItem: function (sKey, vValue) {
                    if (isValidHost) {
                        // update generator
                        if (vValue && vValue.support) {
                            vValue.support.generator = generator;
                        }
                        $.ajax({
                            type: 'POST',
                            url: url.origin + '/FioriTools/api/writeChanges',
                            data: JSON.stringify(vValue, null, 2),
                            contentType: 'application/json'
                        });
                    } else {
                        console.error('cannot save flex changes: invalid host');
                    }
                },
                removeItem: function (sKey) {
                    if (isValidHost) {
                        $.ajax({
                            type: 'DELETE',
                            url: url.origin + '/FioriTools/api/removeChanges',
                            data: JSON.stringify({ fileName: sKey }),
                            contentType: 'application/json'
                        });
                    } else {
                        console.error('cannot delete flex changes: invalid host');
                    }
                },
                clear: function () {
                    // not implemented
                },
                getItem: function (sKey) {
                    // not implemented
                },
                getItems: async function () {
                    if (isValidHost) {
                        const changes = await $.ajax({
                            url: url.origin + '/FioriTools/api/getChanges',
                            type: 'GET',
                            cache: false,
                            dataType: 'json'
                        });
                        return changes;
                    } else {
                        console.error('cannot load flex changes: invalid host');
                        return [];
                    }
                }
            },
            loadFeatures: function () {
                return ObjectStorageConnector.loadFeatures().then(function (settings) {
                    const [majorVersion, minorVersion] = sap.ui.version.split('.').map((v) => parseInt(v, 10));
                    if (majorVersion >= 1 && minorVersion >= 90) {
                        settings.isVariantAdaptationEnabled = true;
                    }

                    if (rtaMode === 'forAdaptation') {
                        settings.isVariantAdaptationEnabled = false;
                    }
                    return settings;
                });
            }
        });

        return WorkspaceConnector;
    },
    true
);
